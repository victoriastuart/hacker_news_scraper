#!/usr/bin/env  python3
# coding: utf-8
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=python textwidth=220

""" ===========================================================================
         file: /mnt/Vancouver/programming/python/scripts/hn-regex_test.py
        about: Python script to test regex expressions over Hacker News scraper output (hn.txt)
        title: Hacker News Scraper regex tester
       author: Victoria A. Stuart
      created: 2020-05-05
      version: 01
last modified: 2020-05-05 10:43:09 -0700 (PST)

   Notes: I program in Vim with textwidth=220

Versions:
    * v01 : this

See also:
    * /mnt/Vancouver/programming/python/scripts/hn.py    ## << generates:
    * /mnt/Vancouver/programming/python/scripts/output/hn.txt

Usage:
    * python /mnt/Vancouver/programming/python/scripts/hn-regex_test.py
==============================================================================
"""
# https://stackoverflow.com/questions/879173/how-to-ignore-deprecation-warnings-in-python
def warn(*args, **kwargs):
    pass
import warnings
warnings.warn = warn
warnings.filterwarnings("ignore", category=UserWarning)
# ============================================================================

import re, sys

# Various "in place" regex expressions over JSON output (hn.txt) file.

""" ISSUE: it's difficult:
    1. to edit a file "in place" in Python (like the linux `sed -i ...` command)
       [two-step solution: open and read file; open and write file]; and
    2. to make multiple (different regex expressions) edits to multiple lines in that file
       [solution: create a dictionary of replacements; open file and make those substitutions; write those results to file].

    The "with open() as file:" expression, e.g.

        # https://stackoverflow.com/questions/4427542/how-to-do-sed-like-text-replace-with-python
        # Can't "rw" in one operation (open file), so do in two parts:

        with open('/mnt/Vancouver/programming/python/scripts/output/hn.txt', 'r') as f:
            lines = f.readlines()
        with open('/mnt/Vancouver/programming/python/scripts/output/hn.txt', 'w') as f:
            for line in lines:
                ## remove trailing commas at end of JSON output lines (interferes with Vim `gx` (open URL) command:
                f.write(re.sub(r',$', '', line))
        with open('/mnt/Vancouver/programming/python/scripts/output/hn.txt', 'w') as f:
            for line in lines:
                ## remove quotation marks:
                f.write(re.sub(r',"', '', line))

    ... which offers a potential solution, BUT it only reads through the file once (hence you cannot make multiple edits).  Without fancy manipulations (e.g. resetting the file pointer [file.seek(0)] or using a "while loop" to loop over the file multiple times ("while True do ...", e.g.  https://stackoverflow.com/questions/42211541/how-to-go-through-file-multiple-times-in-python), imo those are messy approaches.

    The solutions offered in (corresponding to items {1.|2.} above, provide an elegant, flexible solution:
        1. https://stackoverflow.com/questions/4427542/how-to-do-sed-like-text-replace-with-python
           https://stackoverflow.com/a/4427835/1904943

        2. https://stackoverflow.com/questions/15175142/how-can-i-do-multiple-substitutions-using-regex-in-python
           https://stackoverflow.com/a/15175239/1904943

    ... as implemented, below.
"""

def multiple_replace(dict, text):
    # Create a regular expression  from the dictionary keys:
    regex = re.compile("(%s)" % "|".join(map(re.escape, dict.keys())))
    # For each match, look-up corresponding value in dictionary:
    return regex.sub(lambda mo: dict[mo.string[mo.start():mo.end()]], text)

""" Use a dictionary to replace various annoyances in the "hn.txt" file generated by my "hn.py" script:

    * remove trailing commas at end of JSON output lines (interferes with Vim `gx` (open URL) command

    * remove the unicode (e.g. "smart quotes") generated by BeautifulSoup 4; e.g.:

        https://stackoverflow.com/questions/42444559/replace-all-smart-quotes-in-beautiful-soup
        https://stackoverflow.com/questions/24358361/removing-u2018-and-u2019-character
"""

hn_dict = {
         ',' : ''
        ,'"' : ''
        ,"\\u201c" : '"'
        ,"\\u201d" : '"'
        ,"\\u2018" : "'"
        ,"\\u2019" : "'"
        ,"\\u2013" : "-"
        }

with open('/mnt/Vancouver/programming/python/scripts/output/hn.txt', 'r') as f:
    new_text = multiple_replace(hn_dict, f.read())

with open('/mnt/Vancouver/programming/python/scripts/output/hn.txt', 'w') as f:
    f.write(new_text)

# ============================================================================

